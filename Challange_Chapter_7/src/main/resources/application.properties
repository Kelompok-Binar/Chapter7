server.port=8080
spring.datasource.url=jdbc:postgresql://localhost:5432/ReservasiTiket2
spring.datasource.username=postgres
spring.datasource.password=divajuan123
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto = none
spring.jpa.properties.hibernate.default_schema = public
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

logging.level.root = error
logging.level.com.example.challenge_chapter_4 = info
logging.file.name=Challange-Chapter7.log

logging.logback.rollingpolicy.max-file-size=10KB
logging.logback.rollingpolicy.max-history=100
logging.logback.rollingpolicy.total-size-cap=1GB
#logging.logback.rollingpolicy.clean-history-on-start=true

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

springdoc.api-docs.path=/v3/api-docs

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer